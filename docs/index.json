{"repository_name":"github.com/Jens0512/crypt","body":"[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://jens0512.github.io/crypt/)\n\n# crypt\n\nThis is a amateur WIP, made for fun, and is not of good quality.\n\nCrypt is a crystal-library for encrypting and decrypting cipers.\n\nMost of what is here works like it should, apart for some problems with casing in alphabet chars, this is easily avoided by using only uppercased chars, but im working on fixing the bufg, the bug causes case-sensitive ciphers like the dvorak-substitution-cipher to not work properly.\n\nI have no expertise in ciphers, so **any** constructive feedback is very much welcome, even just a simple explanation of expexted behaviour.\n\nCurrently the only avaible ciphers are simple substitution-ciphers, and the tabula recta.\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crypt:\n    github: Jens0512/crypt\n```\n\n## Usage\n\n```crystal\nrequire \"crypt\"\ninclude Crypt\n```\n\nSimple caesar ciphers\n```crystal\nrot3 = Ciphers.caesar 3\nencrypted = rot3.encrypt \"This, is, weak!\" # => \"Wklv, lv, zhdn!\"\nrot3.decrypt encrypted # => \"This, is, weak!\"\nrot3.encrypt \"This, is, weak!\", cut_unknown?: true # => \"Wklv lv zhdn\"\n```\n\nSimple substitution-ciphers\n```crystal\ncipher = Ciphers.substitution(\"1234\", \"4321\")\ncipher.encrypt \"12345\" # => \"43215\"\ncipher.decrypt \"400\" # => \"100\"\n``` \n\n## Contributing\nHelp wanted! See: #1\n\n1. Fork it ( https://github.com/[your-github-name]/crypt/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Jens0512](https://github.com/Jens0512) Jens - creator, maintainer\n","program":{"html_id":"github.com/Jens0512/crypt/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/Jens0512/crypt","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/Jens0512/crypt/Crypt","path":"Crypt.html","kind":"module","full_name":"Crypt","name":"Crypt","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/Jens0512/crypt/Crypt/Constants","kind":"module","full_name":"Crypt::Constants","name":"Constants"},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"}],"locations":[{"filename":"crypt/alphabet/letter.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr"},{"filename":"crypt/alphabet/operations.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr"},{"filename":"crypt/alphabet/operators.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr"},{"filename":"crypt/alphabet/transformations.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr"},{"filename":"crypt/alphabet.cr","line_number":3,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr"},{"filename":"crypt/utils.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr"},{"filename":"crypt/ciphers/cipher.cr","line_number":3,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr"},{"filename":"crypt/ciphers.cr","line_number":3,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr"},{"filename":"crypt/constants.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/constants.cr"},{"filename":"crypt/object_extensions.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr"},{"filename":"crypt/version.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/version.cr"},{"filename":"crypt.cr","line_number":3,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"\"0.2.0\"","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"},{"html_id":"github.com/Jens0512/crypt/Crypt/Constants","kind":"module","full_name":"Crypt::Constants","name":"Constants"}],"extended_modules":[{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"alphabet(letters,**opts)-instance-method","html_id":"alphabet(letters,**opts)-instance-method","name":"alphabet","doc":null,"summary":null,"abstract":false,"args":[{"name":"letters","doc":null,"default_value":"","external_name":"letters","restriction":""}],"args_string":"(letters, **opts)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt.cr#L10","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt.cr#L10","def":{"name":"alphabet","args":[{"name":"letters","doc":null,"default_value":"","external_name":"letters","restriction":""}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Alphabet.new(letters, **opts)"}}],"macros":[],"types":[{"html_id":"github.com/Jens0512/crypt/Crypt/Alphabet","path":"Crypt/Alphabet.html","kind":"class","full_name":"Crypt::Alphabet","name":"Alphabet","abstract":false,"superclass":{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/Jens0512/crypt/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/Jens0512/crypt/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/Jens0512/crypt/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/alphabet/letter.cr","line_number":62,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr"},{"filename":"crypt/alphabet/operations.cr","line_number":2,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr"},{"filename":"crypt/alphabet/operators.cr","line_number":2,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr"},{"filename":"crypt/alphabet/transformations.cr","line_number":2,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr"},{"filename":"crypt/alphabet.cr","line_number":7,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Jens0512/crypt/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/Jens0512/crypt/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"},"doc":"An alphabet does not neccesarily have to be the \nlatin \"abc...xyz\" alphabet, but can be any length of chars.\nUsed in the ciphers here for just about everything","summary":"<p>An alphabet does not neccesarily have to be the  latin \"abc...xyz\" alphabet, but can be any length of chars.</p>","class_methods":[{"id":"default=(default:Alphabet)-class-method","html_id":"default=(default:Alphabet)-class-method","name":"default=","doc":"Used in the `Ciphers`-module\nChange to whatever you'd like","summary":"<p>Used in the <code><a href=\"../Crypt/Ciphers.html\">Ciphers</a></code>-module Change to whatever you'd like</p>","abstract":false,"args":[{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":"Alphabet"}],"args_string":"(default : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L12","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L12","def":{"name":"default=","args":[{"name":"default","doc":null,"default_value":"","external_name":"default","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default = default"}}],"constructors":[{"id":"default:Alphabet-class-method","html_id":"default:Alphabet-class-method","name":"default","doc":"Used in the `Ciphers`-module\nChange to whatever you'd like","summary":"<p>Used in the <code><a href=\"../Crypt/Ciphers.html\">Ciphers</a></code>-module Change to whatever you'd like</p>","abstract":false,"args":[],"args_string":" : Alphabet","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L12","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L12","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Alphabet","visibility":"Public","body":"@@default"}},{"id":"new(alpha:Alphabet,**opts)-class-method","html_id":"new(alpha:Alphabet,**opts)-class-method","name":"new","doc":"Passes alpha.to_s and **opts to `Alphabet.new(letters: String, *)`","summary":"<p>Passes alpha.to_s and **opts to <code>Alphabet.new(letters: String, *)</code></p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet, **opts)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L48","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L48","def":{"name":"new","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(alpha, **opts)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(letters:String,*,case_sensitive?:Bool=false,final?:Bool=false)-class-method","html_id":"new(letters:String,*,case_sensitive?:Bool=false,final?:Bool=false)-class-method","name":"new","doc":"Creates an alphabet with the characters of letters\n\n\n```\nAlphabet.new \"hello fish\" # => #<Crypt::Alphabet:\"HELLO FISH\">\nAlphabet.new \"Hello Fish\", case_sensitive?: true # => #<Crypt::Alphabet:\"hello fish\">\n```","summary":"<p>Creates an alphabet with the characters of letters</p>","abstract":false,"args":[{"name":"letters","doc":null,"default_value":"","external_name":"letters","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"case_sensitive?","doc":null,"default_value":"false","external_name":"case_sensitive?","restriction":"Bool"},{"name":"final?","doc":null,"default_value":"false","external_name":"final?","restriction":"Bool"}],"args_string":"(letters : String, *, case_sensitive? : Bool = <span class=\"n\">false</span>, final? : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L29","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L29","def":{"name":"new","args":[{"name":"letters","doc":null,"default_value":"","external_name":"letters","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"case_sensitive?","doc":null,"default_value":"false","external_name":"case_sensitive?","restriction":"Bool"},{"name":"final?","doc":null,"default_value":"false","external_name":"final?","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(letters, \"case_sensitive?\": case_sensitive?, \"final?\": final?)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(letters:Array(Char),*,case_sensitive?:Bool=false,final?:Bool=false)-class-method","html_id":"new(letters:Array(Char),*,case_sensitive?:Bool=false,final?:Bool=false)-class-method","name":"new","doc":"Same as `Alphabet.initialize(letters : String)","summary":"<p>Same as `Alphabet.initialize(letters : String)</p>","abstract":false,"args":[{"name":"letters","doc":null,"default_value":"","external_name":"letters","restriction":"Array(Char)"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"case_sensitive?","doc":null,"default_value":"false","external_name":"case_sensitive?","restriction":"Bool"},{"name":"final?","doc":null,"default_value":"false","external_name":"final?","restriction":"Bool"}],"args_string":"(letters : Array(Char), *, case_sensitive? : Bool = <span class=\"n\">false</span>, final? : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L34","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L34","def":{"name":"new","args":[{"name":"letters","doc":null,"default_value":"","external_name":"letters","restriction":"Array(Char)"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"case_sensitive?","doc":null,"default_value":"false","external_name":"case_sensitive?","restriction":"Bool"},{"name":"final?","doc":null,"default_value":"false","external_name":"final?","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(letters, \"case_sensitive?\": case_sensitive?, \"final?\": final?)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"shift(initial:Alphabet,shift:Int,case_sensitive?:Bool=initial.case_sensitive?,**opts):Alphabet-class-method","html_id":"shift(initial:Alphabet,shift:Int,case_sensitive?:Bool=initial.case_sensitive?,**opts):Alphabet-class-method","name":"shift","doc":"Returns an alphabet that is a shift by `shift` of `initial`\n\n`opts` are passed to the initialization of the shifted alphabet,\nthe new alphabet has by default the same case sensitivity as the initial alphabet","summary":"<p>Returns an alphabet that is a shift by <code><a href=\"../Crypt/Alphabet.html#shift%28shift%3AInt%29-instance-method\">#shift</a></code> of <code>initial</code></p>","abstract":false,"args":[{"name":"initial","doc":null,"default_value":"","external_name":"initial","restriction":"Alphabet"},{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"},{"name":"case_sensitive?","doc":null,"default_value":"initial.case_sensitive?","external_name":"case_sensitive?","restriction":"Bool"}],"args_string":"(initial : Alphabet, shift : Int, case_sensitive? : Bool = initial.case_sensitive?, **opts) : Alphabet","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L56","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L56","def":{"name":"shift","args":[{"name":"initial","doc":null,"default_value":"","external_name":"initial","restriction":"Alphabet"},{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"},{"name":"case_sensitive?","doc":null,"default_value":"initial.case_sensitive?","external_name":"case_sensitive?","restriction":"Bool"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Alphabet","visibility":"Public","body":"if shift == 0\n  return initial\nend\nshift = shift % initial.size\nshifted = [] of Char\ninitial.each do |letter|\n  ordinal = letter.index + shift\n  if (  ordinal.abs > initial.size)\n    ordinal = ordinal % initial.size\n  end\n  shifted << initial[ordinal].to_c\nend\nnew(shifted.join, **opts, \"case_sensitive?\": case_sensitive?)\n"}}],"instance_methods":[{"id":"+(other:Alphabet)-instance-method","html_id":"+(other:Alphabet)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Alphabet"}],"args_string":"(other : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L43","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L43","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(to_s + other.to_s)"}},{"id":"-(other:String)-instance-method","html_id":"-(other:String)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"args_string":"(other : String)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L56","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L56","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"itself - (alphabet(other))"}},{"id":"-(other:Alphabet)-instance-method","html_id":"-(other:Alphabet)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Alphabet"}],"args_string":"(other : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L47","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L47","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = itself.to_s\nother.to_s.chars.each do |char|\n  result = result.sub(char, \"\")\nend\nalphabet(result)\n"}},{"id":"==(other:String)-instance-method","html_id":"==(other:String)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"args_string":"(other : String)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L39","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"itself.to_s == other"}},{"id":"==(other:Alphabet)-instance-method","html_id":"==(other:Alphabet)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Alphabet"}],"args_string":"(other : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L35","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L35","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"itself.to_s == other.to_s"}},{"id":"[](index:Char|Int,upcase?:Bool?=nil)-instance-method","html_id":"[](index:Char|Int,upcase?:Bool?=nil)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Char | Int"},{"name":"upcase?","doc":null,"default_value":"nil","external_name":"upcase?","restriction":"Bool | ::Nil"}],"args_string":"(index : Char | Int, upcase? : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L3","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L3","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Char | Int"},{"name":"upcase?","doc":null,"default_value":"nil","external_name":"upcase?","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if index.is_a?(Char)\n  if letter = get_letter(index)\n    letter\n  else\n    raise(IndexError.new((    \"Alphabet does not contain '#{index}'\")))\n  end\nelse\n  if index == 0\n    raise(IndexError.new(\"The first index is of 1, so index 0 cannot be used\"))\n  end\n  letter = @letters[(  index >= 1) ? (  index - 1) : index]\n  if upcase?.is_a?(Nil)\n    return letter\n  else\n    return (    upcase? ? letter.downcase : letter.upcase)\n  end\nend"}},{"id":"[]?(index:Char|Int,upcase?:Bool?=nil)-instance-method","html_id":"[]?(index:Char|Int,upcase?:Bool?=nil)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Char | Int"},{"name":"upcase?","doc":null,"default_value":"nil","external_name":"upcase?","restriction":"Bool | ::Nil"}],"args_string":"(index : Char | Int, upcase? : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L19","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operators.cr#L19","def":{"name":"[]?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Char | Int"},{"name":"upcase?","doc":null,"default_value":"nil","external_name":"upcase?","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  return itself[index]\nrescue e : IndexError\n  return nil\nend"}},{"id":"case_sensitive?:Bool-instance-method","html_id":"case_sensitive?:Bool-instance-method","name":"case_sensitive?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L20","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet.cr#L20","def":{"name":"case_sensitive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@case_sensitive"}},{"id":"contains?(char:Char)-instance-method","html_id":"contains?(char:Char)-instance-method","name":"contains?","doc":null,"summary":null,"abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"args_string":"(char : Char)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L31","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L31","def":{"name":"contains?","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@letters.each do |letter|\n  if letter == char\n    return true\n  end\nend\nfalse\n"}},{"id":"each(&block)-instance-method","html_id":"each(&amp;block)-instance-method","name":"each","doc":"Yields each `Crypt::AlphabetLetter` in the alphabet","summary":"<p>Yields each <code>Crypt::AlphabetLetter</code> in the alphabet</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L4","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L4","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@letters.each do |letter|\n  yield letter\nend"}},{"id":"finalize!-instance-method","html_id":"finalize!-instance-method","name":"finalize!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L26","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L26","def":{"name":"finalize!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@final = true"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L19","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L19","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"#<Crypt::Alphabet:\\\"#{to_s}\\\">\""}},{"id":"join(delimeter:String=&quot;&quot;)-instance-method","html_id":"join(delimeter:String=&amp;quot;&amp;quot;)-instance-method","name":"join","doc":null,"summary":null,"abstract":false,"args":[{"name":"delimeter","doc":null,"default_value":"\"\"","external_name":"delimeter","restriction":"String"}],"args_string":"(delimeter : String = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L27","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L27","def":{"name":"join","args":[{"name":"delimeter","doc":null,"default_value":"\"\"","external_name":"delimeter","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@letters.join(delimeter)"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":"Returns an alphabet with every character of this reversed\n\n```\nalphabet(\"1234\").reverse # => #<Crypt::Alphabet:\"4321\">\n```","summary":"<p>Returns an alphabet with every character of this reversed</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L33","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L33","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(@letters.reverse.join(\"\"))"}},{"id":"reverse!-instance-method","html_id":"reverse!-instance-method","name":"reverse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L37","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L37","def":{"name":"reverse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"must_be_not_final(\"Alphabet#reverse!\")\n@letter.reverse!\ncorrect_indexes\nitself\n"}},{"id":"shift(shift:Int)-instance-method","html_id":"shift(shift:Int)-instance-method","name":"shift","doc":"Shifts an alphabet `shift` to the left\n\n```\nalphabet(\"1234567\").shift 3 # => #<Crypt::Alphabet:\"4567123\">\nalphabet(\"Hello\", case_sensitive?: true).shift 1 # => #<Crypt::Alphabet:\"elloH\">\n```","summary":"<p>Shifts an alphabet <code><a href=\"../Crypt/Alphabet.html#shift%28shift%3AInt%29-instance-method\">#shift</a></code> to the left</p>","abstract":false,"args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"}],"args_string":"(shift : Int)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L9","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L9","def":{"name":"shift","args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Alphabet.shift(itself, shift)"}},{"id":"shift!(shift:Int)-instance-method","html_id":"shift!(shift:Int)-instance-method","name":"shift!","doc":"Transforms the cipher to become the \nshifted of `shift` version of itself, see `#shift`","summary":"<p>Transforms the cipher to become the  shifted of <code><a href=\"../Crypt/Alphabet.html#shift%28shift%3AInt%29-instance-method\">#shift</a></code> version of itself, see <code><a href=\"../Crypt/Alphabet.html#shift%28shift%3AInt%29-instance-method\">#shift</a></code></p>","abstract":false,"args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"}],"args_string":"(shift : Int)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L20","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/transformations.cr#L20","def":{"name":"shift!","args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"must_be_not_final(\"Alphabet#shift!\")\n@letters = (shift(shift)).letters\nitself\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns the amount of letters in the alphabet","summary":"<p>Returns the amount of letters in the alphabet</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L11","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L11","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@letters.size"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L15","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L15","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << join"}},{"id":"uniq(case_sensitive?:Bool=@case_sensitive,**opts)-instance-method","html_id":"uniq(case_sensitive?:Bool=@case_sensitive,**opts)-instance-method","name":"uniq","doc":null,"summary":null,"abstract":false,"args":[{"name":"case_sensitive?","doc":null,"default_value":"@case_sensitive","external_name":"case_sensitive?","restriction":"Bool"}],"args_string":"(case_sensitive? : Bool = @case_sensitive, **opts)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L23","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/operations.cr#L23","def":{"name":"uniq","args":[{"name":"case_sensitive?","doc":null,"default_value":"@case_sensitive","external_name":"case_sensitive?","restriction":"Bool"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(join.chars.uniq, **opts, \"case_sensitive?\": case_sensitive?)"}}],"macros":[],"types":[]},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","path":"Crypt/Ciphers.html","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crypt/ciphers/cipher.cr","line_number":4,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr"},{"filename":"crypt/ciphers/substitution_cipher.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr"},{"filename":"crypt/ciphers/tabula_recta.cr","line_number":3,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr"},{"filename":"crypt/ciphers/vigenère_ciper.cr","line_number":1,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/vigenère_ciper.cr"},{"filename":"crypt/ciphers.cr","line_number":5,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"}],"subclasses":[],"including_types":[{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"}],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"},"doc":"Module containing all ciphers","summary":"<p>Module containing all ciphers</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"atbash(alpha:Alphabet=Alphabet.default)-instance-method","html_id":"atbash(alpha:Alphabet=Alphabet.default)-instance-method","name":"atbash","doc":"Creates a substitution-cipher where characters \nare substituted with characters of the same \nalphabet but reversed\n\n`Ciphers.atbash.encrypt \"ABC\" # => \"ZYX`","summary":"<p>Creates a substitution-cipher where characters  are substituted with characters of the same  alphabet but reversed</p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet = <span class=\"t\">Alphabet</span>.default)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L41","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L41","def":{"name":"atbash","args":[{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitution(alpha, alpha.reverse)"}},{"id":"caesar(shift:Int=3,alpha:Alphabet=Alphabet.default)-instance-method","html_id":"caesar(shift:Int=3,alpha:Alphabet=Alphabet.default)-instance-method","name":"caesar","doc":"Same as `substitution(alphabet, alphabet.shift(shift))`    ","summary":"<p>Same as <code>substitution(alphabet, alphabet.shift(shift))</code>    </p>","abstract":false,"args":[{"name":"shift","doc":null,"default_value":"3","external_name":"shift","restriction":"Int"},{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(shift : Int = <span class=\"n\">3</span>, alpha : Alphabet = <span class=\"t\">Alphabet</span>.default)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L19","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L19","def":{"name":"caesar","args":[{"name":"shift","doc":null,"default_value":"3","external_name":"shift","restriction":"Int"},{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitution(alpha, alpha.shift(shift))"}},{"id":"deranged(key:String,alpha:Alphabet=Alphabet.default)-instance-method","html_id":"deranged(key:String,alpha:Alphabet=Alphabet.default)-instance-method","name":"deranged","doc":"Creates a deranged alphabet where `key` is inserted to the alphabet\n\n```\nCiphers.deranged(\"BOBBY\").beta # => \"BOYACDEFGHIJKLMNPQRSTUVWXZ\"\n```\nThis is the operation:\n```\nsubstitution(alpha, key.chars.uniq.join + (alpha - key))\n```","summary":"<p>Creates a deranged alphabet where <code>key</code> is inserted to the alphabet</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(key : String, alpha : Alphabet = <span class=\"t\">Alphabet</span>.default)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L32","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L32","def":{"name":"deranged","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitution(alpha, key + (alpha - key))"}},{"id":"dvorak-instance-method","html_id":"dvorak-instance-method","name":"dvorak","doc":"Encrypts text by taking the QWERTY keyboard indices of the chars and replacing them by the Dvorak equavilent index\n    \n```\ndvorak.encrypt \"Fish\" # => \"Ucod\"\n```\n\nThe cipher is a substitution-cipher, see `Constants.DVORAK_CIPHER","summary":"<p>Encrypts text by taking the QWERTY keyboard indices of the chars and replacing them by the Dvorak equavilent index      <code></code>` dvorak.encrypt \"Fish\" # => \"Ucod\" <code></code>`</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L52","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L52","def":{"name":"dvorak","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"DVORAK_CIPHER"}},{"id":"rot(shift:Int,alpha=Alphabet.default)-instance-method","html_id":"rot(shift:Int,alpha=Alphabet.default)-instance-method","name":"rot","doc":"Exactly the same as `Ciphers#caesar`, but without default shift","summary":"<p>Exactly the same as <code><a href=\"../Crypt/Ciphers.html#caesar%28shift%3AInt%3D3%2Calpha%3AAlphabet%3DAlphabet.default%29-instance-method\">Ciphers#caesar</a></code>, but without default shift</p>","abstract":false,"args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"},{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":""}],"args_string":"(shift : Int, alpha = <span class=\"t\">Alphabet</span>.default)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L14","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L14","def":{"name":"rot","args":[{"name":"shift","doc":null,"default_value":"","external_name":"shift","restriction":"Int"},{"name":"alpha","doc":null,"default_value":"Alphabet.default","external_name":"alpha","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"caesar(shift, alpha)"}},{"id":"substitution(*args,**opts)-instance-method","html_id":"substitution(*args,**opts)-instance-method","name":"substitution","doc":"See `Ciphers::SubstitutionCipher.new`","summary":"<p>See <code>Ciphers::SubstitutionCipher.new</code></p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **opts)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L9","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers.cr#L9","def":{"name":"substitution","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubstitutionCipher.new(*args, **opts)"}}],"macros":[],"types":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/Cipher","path":"Crypt/Ciphers/Cipher.html","kind":"class","full_name":"Crypt::Ciphers::Cipher","name":"Cipher","abstract":true,"superclass":{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/ciphers/cipher.cr","line_number":5,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/SubstitutionCipher","kind":"class","full_name":"Crypt::Ciphers::SubstitutionCipher","name":"SubstitutionCipher"},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/TabulaRecta","kind":"class","full_name":"Crypt::Ciphers::TabulaRecta","name":"TabulaRecta"}],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"decrypt(char:Char,*args,**options):Char-instance-method","html_id":"decrypt(char:Char,*args,**options):Char-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":true,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(char : Char, *args, **options) : Char","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr#L7","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr#L7","def":{"name":"decrypt","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":""}},{"id":"encrypt(char:Char,*args,**options):Char-instance-method","html_id":"encrypt(char:Char,*args,**options):Char-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":true,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(char : Char, *args, **options) : Char","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr#L6","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/cipher.cr#L6","def":{"name":"encrypt","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/SubstitutionCipher","path":"Crypt/Ciphers/SubstitutionCipher.html","kind":"class","full_name":"Crypt::Ciphers::SubstitutionCipher","name":"SubstitutionCipher","abstract":false,"superclass":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/Cipher","kind":"class","full_name":"Crypt::Ciphers::Cipher","name":"Cipher"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/Cipher","kind":"class","full_name":"Crypt::Ciphers::Cipher","name":"Cipher"},{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/ciphers/substitution_cipher.cr","line_number":2,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(alpha:String,beta:String,**opts)-class-method","html_id":"new(alpha:String,beta:String,**opts)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"String"},{"name":"beta","doc":null,"default_value":"","external_name":"beta","restriction":"String"}],"args_string":"(alpha : String, beta : String, **opts)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L9","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L9","def":{"name":"new","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"String"},{"name":"beta","doc":null,"default_value":"","external_name":"beta","restriction":"String"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(alpha, beta, **opts)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(alpha:Alphabet,beta:Alphabet)-class-method","html_id":"new(alpha:Alphabet,beta:Alphabet)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"},{"name":"beta","doc":null,"default_value":"","external_name":"beta","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet, beta : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L13","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L13","def":{"name":"new","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"},{"name":"beta","doc":null,"default_value":"","external_name":"beta","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(alpha, beta)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alpha:Crypt::Alphabet-instance-method","html_id":"alpha:Crypt::Alphabet-instance-method","name":"alpha","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crypt::Alphabet","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L3","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L3","def":{"name":"alpha","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alpha"}},{"id":"beta:Crypt::Alphabet-instance-method","html_id":"beta:Crypt::Alphabet-instance-method","name":"beta","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crypt::Alphabet","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L3","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L3","def":{"name":"beta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@beta"}},{"id":"case_sensitive?-instance-method","html_id":"case_sensitive?-instance-method","name":"case_sensitive?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L143","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L143","def":{"name":"case_sensitive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alpha.case_sensitive? || @beta.case_sensitive?"}},{"id":"cut_unknown?:Bool-instance-method","html_id":"cut_unknown?:Bool-instance-method","name":"cut_unknown?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L6","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L6","def":{"name":"cut_unknown?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cut_unknown"}},{"id":"cut_whitespace?:Bool-instance-method","html_id":"cut_whitespace?:Bool-instance-method","name":"cut_whitespace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L5","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L5","def":{"name":"cut_whitespace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cut_whitespace"}},{"id":"decrypt(string,*args)-instance-method","html_id":"decrypt(string,*args)-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(string, *args)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L23","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L23","def":{"name":"decrypt","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitute(string, false, *args)"}},{"id":"encrypt(string,*args)-instance-method","html_id":"encrypt(string,*args)-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(string, *args)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L19","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L19","def":{"name":"encrypt","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitute(string, true, *args)"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L139","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L139","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"#<Crypt::SubstitutionCipher⦕⦕#{@alpha}ψ#{@beta}⦖⦖>\""}},{"id":"known?(char:Char?,direction:Bool)-instance-method","html_id":"known?(char:Char?,direction:Bool)-instance-method","name":"known?","doc":null,"summary":null,"abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char | ::Nil"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Bool"}],"args_string":"(char : Char?, direction : Bool)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L27","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L27","def":{"name":"known?","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char | ::Nil"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if char\nelse\n  return false\nend\nreturn (direction ? (@alpha.includes?(char)) : (@beta.includes?(char)))\n"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L116","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L116","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reversed = new(@beta, @alpha)\nreversed.transform(\"cut_whitespace?\": @cut_whitespace, \"cut_unknown?\": @cut_unknown)\n"}},{"id":"to_hr_s-instance-method","html_id":"to_hr_s-instance-method","name":"to_hr_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L128","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L128","def":{"name":"to_hr_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(to_hrs(IO::Memory.new)).to_s"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L124","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L124","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"⦕⦕#{@alpha}ψ#{@beta}⦖⦖\""}},{"id":"transform(cut_whitespace?:Bool=@cut_whitespace,cut_unknown?:Bool=@cut_unknown)-instance-method","html_id":"transform(cut_whitespace?:Bool=@cut_whitespace,cut_unknown?:Bool=@cut_unknown)-instance-method","name":"transform","doc":null,"summary":null,"abstract":false,"args":[{"name":"cut_whitespace?","doc":null,"default_value":"@cut_whitespace","external_name":"cut_whitespace?","restriction":"Bool"},{"name":"cut_unknown?","doc":null,"default_value":"@cut_unknown","external_name":"cut_unknown?","restriction":"Bool"}],"args_string":"(cut_whitespace? : Bool = @cut_whitespace, cut_unknown? : Bool = @cut_unknown)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L101","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/substitution_cipher.cr#L101","def":{"name":"transform","args":[{"name":"cut_whitespace?","doc":null,"default_value":"@cut_whitespace","external_name":"cut_whitespace?","restriction":"Bool"},{"name":"cut_unknown?","doc":null,"default_value":"@cut_unknown","external_name":"cut_unknown?","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (cut_whitespace? == @cut_whitespace) && (cut_unknown? == @cut_unknown)\n  return itself.dup\nend\ntransformed = itself.dup\ntransformed.cut_whitespace = cut_whitespace?\ntransformed.cut_unknown = cut_unknown?\nreturn transformed\n"}}],"macros":[],"types":[]},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/TabulaRecta","path":"Crypt/Ciphers/TabulaRecta.html","kind":"class","full_name":"Crypt::Ciphers::TabulaRecta","name":"TabulaRecta","abstract":false,"superclass":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/Cipher","kind":"class","full_name":"Crypt::Ciphers::Cipher","name":"Cipher"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/Cipher","kind":"class","full_name":"Crypt::Ciphers::Cipher","name":"Cipher"},{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/ciphers/tabula_recta.cr","line_number":4,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/VigenèreCipher","kind":"class","full_name":"Crypt::Ciphers::VigenèreCipher","name":"VigenèreCipher"}],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"},"doc":null,"summary":null,"class_methods":[{"id":"print_table(alphabet=Alphabet.default,io:IO=STDOUT)-class-method","html_id":"print_table(alphabet=Alphabet.default,io:IO=STDOUT)-class-method","name":"print_table","doc":null,"summary":null,"abstract":false,"args":[{"name":"alphabet","doc":null,"default_value":"Alphabet.default","external_name":"alphabet","restriction":""},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(alphabet = <span class=\"t\">Alphabet</span>.default, io : IO = <span class=\"t\">STDOUT</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L51","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L51","def":{"name":"print_table","args":[{"name":"alphabet","doc":null,"default_value":"Alphabet.default","external_name":"alphabet","restriction":""},{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io.puts(\"\n  #{((alphabet.join(\" \")).colorize.fore(:white)).mode(:bold)}\")\nalphabet.each do |letter|\n  line = ((alphabet.shift(letter.index - 1)).join(\"|\")).colorize(:green)\n  if letter.index == alphabet.size\n  else\n    line.mode(:underline)\n  end\n  left_char = (letter.to_c.colorize.fore(:light_green)).mode(:bold)\n  io.puts(\"#{left_char} #{line}\")\nend\n"}}],"constructors":[{"id":"new(alphabet:Alphabet=Alphabet.default,key:String?=nil)-class-method","html_id":"new(alphabet:Alphabet=Alphabet.default,key:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"alphabet","doc":null,"default_value":"Alphabet.default","external_name":"alphabet","restriction":"Alphabet"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"}],"args_string":"(alphabet : Alphabet = <span class=\"t\">Alphabet</span>.default, key : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L8","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L8","def":{"name":"new","args":[{"name":"alphabet","doc":null,"default_value":"Alphabet.default","external_name":"alphabet","restriction":"Alphabet"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(alphabet, key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alphabet:Crypt::Alphabet-instance-method","html_id":"alphabet:Crypt::Alphabet-instance-method","name":"alphabet","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crypt::Alphabet","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L6","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L6","def":{"name":"alphabet","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alphabet"}},{"id":"decrypt(char:Char,key_char:Char,*args):Char-instance-method","html_id":"decrypt(char:Char,key_char:Char,*args):Char-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"key_char","doc":null,"default_value":"","external_name":"key_char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(char : Char, key_char : Char, *args) : Char","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L17","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L17","def":{"name":"decrypt","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"key_char","doc":null,"default_value":"","external_name":"key_char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":"encrypt(char, key_char)"}},{"id":"decrypt(string,key=@key,*args)-instance-method","html_id":"decrypt(string,key=@key,*args)-instance-method","name":"decrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"key","doc":null,"default_value":"@key","external_name":"key","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(string, key = @key, *args)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L25","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L25","def":{"name":"decrypt","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"key","doc":null,"default_value":"@key","external_name":"key","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitute(string, key, false, *args)"}},{"id":"encrypt(char:Char,key_char:Char,*args):Char-instance-method","html_id":"encrypt(char:Char,key_char:Char,*args):Char-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"key_char","doc":null,"default_value":"","external_name":"key_char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(char : Char, key_char : Char, *args) : Char","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L10","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L10","def":{"name":"encrypt","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"key_char","doc":null,"default_value":"","external_name":"key_char","restriction":"Char"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":"if @alphabet.contains?(key_char)\nelse\n  raise(\"Key must consist of characters in the alphabet!\")\nend\nshifted = @alphabet.shift(@alphabet[char.upcase].index - 1)\n@alphabet[shifted[shifted[key_char.upcase].index].index].to_c\n"}},{"id":"encrypt(string,key=@key,*args)-instance-method","html_id":"encrypt(string,key=@key,*args)-instance-method","name":"encrypt","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"key","doc":null,"default_value":"@key","external_name":"key","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(string, key = @key, *args)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L21","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L21","def":{"name":"encrypt","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""},{"name":"key","doc":null,"default_value":"@key","external_name":"key","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"substitute(string, key, true, *args)"}},{"id":"key?:String?-instance-method","html_id":"key?:String?-instance-method","name":"key?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L5","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L5","def":{"name":"key?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key"}},{"id":"print(io:IO=STDOUT)-instance-method","html_id":"print(io:IO=STDOUT)-instance-method","name":"print","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(io : IO = <span class=\"t\">STDOUT</span>)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L49","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/tabula_recta.cr#L49","def":{"name":"print","args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.print_table(itself, io)"}}],"macros":[],"types":[]},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/VigenèreCipher","path":"Crypt/Ciphers/VigenèreCipher.html","kind":"class","full_name":"Crypt::Ciphers::VigenèreCipher","name":"VigenèreCipher","abstract":false,"superclass":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/TabulaRecta","kind":"class","full_name":"Crypt::Ciphers::TabulaRecta","name":"TabulaRecta"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/TabulaRecta","kind":"class","full_name":"Crypt::Ciphers::TabulaRecta","name":"TabulaRecta"},{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers/Cipher","kind":"class","full_name":"Crypt::Ciphers::Cipher","name":"Cipher"},{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/ciphers/vigenère_ciper.cr","line_number":2,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/ciphers/vigenère_ciper.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt/Ciphers","kind":"module","full_name":"Crypt::Ciphers","name":"Ciphers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/Jens0512/crypt/Crypt/Constants","path":"Crypt/Constants.html","kind":"module","full_name":"Crypt::Constants","name":"Constants","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crypt/constants.cr","line_number":2,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/constants.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"DVORAK","value":"Alphabet.new(\"`1234567890[]',.pyfgcrl/=\\\\aoeuidhtns-;qjkxbmwvz~!@#$%^&*(){}\\\"<>PYFGCRL?+|AOEUIDHTNS_:QJKXBMWVZ\", \"final?\": true, \"case_sensitive?\": true)","doc":"The chars for an alternative keyboard layout *Dvorak*","summary":"<p>The chars for an alternative keyboard layout <em>Dvorak</em></p>"},{"name":"DVORAK_CIPHER","value":"Ciphers.substitution(QWERTY, DVORAK)","doc":null,"summary":null},{"name":"LATIN","value":"Alphabet.new(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"final?\": true)","doc":"The latin alphabet, the same as the english","summary":"<p>The latin alphabet, the same as the english</p>"},{"name":"QWERTY","value":"Alphabet.new(\"`1234567890-=qwertyuiop[]\\\\asdfghjkl;'zxcvbnm,./~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:\\\"ZXCVBNM<>?\", \"final?\": true, \"case_sensitive?\": true)","doc":"The chars for the standard western keyboard layout *Qwerty*","summary":"<p>The chars for the standard western keyboard layout <em>Qwerty</em></p>"}],"included_modules":[],"extended_modules":[{"html_id":"github.com/Jens0512/crypt/Crypt/Constants","kind":"module","full_name":"Crypt::Constants","name":"Constants"}],"subclasses":[],"including_types":[{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"}],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/Jens0512/crypt/Crypt/SymbolBase","path":"Crypt/SymbolBase.html","kind":"struct","full_name":"Crypt::SymbolBase","name":"SymbolBase","abstract":true,"superclass":{"html_id":"github.com/Jens0512/crypt/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/Jens0512/crypt/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/alphabet/letter.cr","line_number":7,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"},"doc":"NOTE: This class is not currently very useful, in fact it is quite a lot less useful than a normal `Char`\n\nTODO: add ways for a symbol to be anything, like a word or for example either a or b at the same time\n\n:nodoc:","summary":"<p><span class=\"flag purple\">NOTE</span>  This class is not currently very useful, in fact it is quite a lot less useful than a normal <code>Char</code></p>","class_methods":[],"constructors":[{"id":"new(char:Char,case_sensitive?:Bool)-class-method","html_id":"new(char:Char,case_sensitive?:Bool)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"case_sensitive?","doc":null,"default_value":"","external_name":"case_sensitive?","restriction":"Bool"}],"args_string":"(char : Char, case_sensitive? : Bool)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L12","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L12","def":{"name":"new","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"},{"name":"case_sensitive?","doc":null,"default_value":"","external_name":"case_sensitive?","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(char, case_sensitive?)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:SymbolBase)-instance-method","html_id":"==(other:SymbolBase)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"SymbolBase"}],"args_string":"(other : SymbolBase)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L16","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L16","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"SymbolBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (itself.case_sensitive? || other.case_sensitive?)\n  return @char == other.to_c\nelse\n  return @char.upcase == other.to_c.upcase\nend"}},{"id":"==(other:Char)-instance-method","html_id":"==(other:Char)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Char"}],"args_string":"(other : Char)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L24","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L24","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"itself.case_sensitive? ? (@char == other) : (@char.upcase == other.upcase)"}},{"id":"case_sensitive?:Bool-instance-method","html_id":"case_sensitive?:Bool-instance-method","name":"case_sensitive?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L8","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L8","def":{"name":"case_sensitive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@case_sensitive"}},{"id":"downcase-instance-method","html_id":"downcase-instance-method","name":"downcase","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L53","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L53","def":{"name":"downcase","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_char = itself.dup\nnew_char.char = new_char.char.downcase\nnew_char\n"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L32","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L32","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s(io)"}},{"id":"to_c-instance-method","html_id":"to_c-instance-method","name":"to_c","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L36","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L36","def":{"name":"to_c","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"itself.case_sensitive? ? @char : @char.upcase"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L28","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L28","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << to_c"}},{"id":"upcase-instance-method","html_id":"upcase-instance-method","name":"upcase","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L47","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L47","def":{"name":"upcase","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_char = itself.dup\nnew_char.char = new_char.char.upcase\nnew_char\n"}},{"id":"uppercase?(*args,**options)-instance-method","html_id":"uppercase?(*args,**options)-instance-method","name":"uppercase?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L59","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L59","def":{"name":"uppercase?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char.uppercase?(*args, **options)"}},{"id":"uppercase?(*args,**options,&block)-instance-method","html_id":"uppercase?(*args,**options,&amp;block)-instance-method","name":"uppercase?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &block)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L59","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/alphabet/letter.cr#L59","def":{"name":"uppercase?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@char.uppercase?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/Jens0512/crypt/Crypt/Utils","path":"Crypt/Utils.html","kind":"module","full_name":"Crypt::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crypt/utils.cr","line_number":4,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/Jens0512/crypt/Crypt/Utils","kind":"module","full_name":"Crypt::Utils","name":"Utils"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/Jens0512/crypt/Crypt","kind":"module","full_name":"Crypt","name":"Crypt"},"doc":"Handy utils\nNotably `#key_to_length` and `#case_to`","summary":"<p>Handy utils Notably <code><a href=\"../Crypt/Utils.html#key_to_length%28key%2Clength%3AInt%29-instance-method\">#key_to_length</a></code> and <code><a href=\"../Crypt/Utils.html#case_to%28string%3AString%2Cdelta%3AString%29-instance-method\">#case_to</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"case_to(string:String,delta:String)-instance-method","html_id":"case_to(string:String,delta:String)-instance-method","name":"case_to","doc":"Turns every char in `string` to the same index case of `delta`\n\n```\nUtils.case_to \"HELLO\", \"BoBBy\" # => \"HeLLo\"\n```","summary":"<p>Turns every char in <code>string</code> to the same index case of <code>delta</code></p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"String"}],"args_string":"(string : String, delta : String)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr#L39","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr#L39","def":{"name":"case_to","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = [] of Char\nsitr = string.each_char\nditr = delta.each_char\nwhile true\n  if (  dc = ditr.next).is_a?(Iterator::Stop)\n    break\n  end\n  if (  sc = sitr.next).is_a?(Iterator::Stop)\n    break\n  end\n  result << (dc.uppercase? ? sc.upcase : sc.downcase)\nend\nresult.join\n"}},{"id":"key_to_length(key,length:Int)-instance-method","html_id":"key_to_length(key,length:Int)-instance-method","name":"key_to_length","doc":"Repeats `key` until it is the size of `length`\n\n```\nUtils.key_to_length \"fish\", 10 # => \"fishfishfi\"\nUtils.key_to_length \"nota bene\", 3 # => \"not\"\n```","summary":"<p>Repeats <code>key</code> until it is the size of <code>length</code></p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"args_string":"(key, length : Int)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr#L16","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr#L16","def":{"name":"key_to_length","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"length","doc":null,"default_value":"","external_name":"length","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = key.to_s\nresult = [] of Char\nitr = key.each_char.cycle\nat = 0\nwhile length > at\n  nxt = itr.next\n  if nxt.is_a?(Char)\n    result << nxt\n  end\n  at = at + 1\nend\nresult.join(\"\")\n"}},{"id":"key_to_length(key,string)-instance-method","html_id":"key_to_length(key,string)-instance-method","name":"key_to_length","doc":"Same as `#key_to_length` where `length` is passed as the size of `string`","summary":"<p>Same as <code><a href=\"../Crypt/Utils.html#key_to_length%28key%2Clength%3AInt%29-instance-method\">#key_to_length</a></code> where <code>length</code> is passed as the size of <code>string</code></p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(key, string)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr#L8","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/utils.cr#L8","def":{"name":"key_to_length","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key_to_length(key, string.size)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/Jens0512/crypt/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/Jens0512/crypt/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/Jens0512/crypt/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/Jens0512/crypt/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crypt/object_extensions.cr","line_number":7,"url":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr"}],"repository_name":"github.com/Jens0512/crypt","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/Jens0512/crypt/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Crypt extends the String class a bit to simplifiy operations\n\n\n","summary":"<p>Crypt extends the String class a bit to simplifiy operations</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"+(alpha:Alphabet)-instance-method","html_id":"+(alpha:Alphabet)-instance-method","name":"+","doc":"Same as `String#<<(alpha : Alphabet)` but returns an alphabet with only unique chars\n\n\n```\n\"HELLLLLLLO\" + Alphabet.new \"FIIIIIISH\" # => #<Crypt::Alphabet:\"HELOFISH\">\n```","summary":"<p>Same as <code><a href=\"String.html#%3C%3C%28alpha%3AAlphabet%29-instance-method\">String#<<(alpha : Alphabet)</a></code> but returns an alphabet with only unique chars</p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L15","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L15","def":{"name":"+","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(itself.chars.uniq.join << alpha.uniq)"}},{"id":"-(alpha:Alphabet)-instance-method","html_id":"-(alpha:Alphabet)-instance-method","name":"-","doc":"Returns an alphabet with the unique chars of the initial string minus the unique chars of `alpha\n\n\n```\n\"HELLO\" - Alphabet.new \"FISH\"     # => #<Crypt::Alphabet:\"ELOFISH\">\n\"FISHY_BOB\" - Alphabet.new \"FISH\" # => #<Crypt::Alphabet:\"Y_BOFISH\">\n```","summary":"<p>Returns an alphabet with the unique chars of the initial string minus the unique chars of `alpha</p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L26","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L26","def":{"name":"-","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(((alphabet(itself.chars.uniq - alpha.uniq.to_s.chars)).to_s << alpha.uniq))"}},{"id":"<<(alpha:Alphabet)-instance-method","html_id":"&lt;&lt;(alpha:Alphabet)-instance-method","name":"<<","doc":"Returns an alphabet where the chars are the initial string, with the chars of `alpha` appended\n\n\n```\n\"ABC\" << Alphabet.new \"DEF\"     # => #<Crypt::Alphabet:\"ABCDEF\">\n\"HELLO\" << Alphabet.new \"FISH\"  # => #<Crypt::Alphabet:\"HELLOFISH\">\n```","summary":"<p>Returns an alphabet where the chars are the initial string, with the chars of <code>alpha</code> appended</p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L47","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L47","def":{"name":"<<","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(itself + alpha.to_s)"}},{"id":"==(alpha:Alphabet)-instance-method","html_id":"==(alpha:Alphabet)-instance-method","name":"==","doc":"Checks wether string is equal to `alpha#to_s`","summary":"<p>Checks wether string is equal to <code>alpha#to_s</code></p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L52","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L52","def":{"name":"==","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"itself == alpha.to_s"}},{"id":">>(alpha:Alphabet)-instance-method","html_id":"&gt;&gt;(alpha:Alphabet)-instance-method","name":">>","doc":"Returns alphabet with the initial string appended to alpha\n\n\n```\n\"DEF\" >> Alphabet.new \"ABC\" # => #<Crypt::Alphabet:\"ABCDEF\">\n```","summary":"<p>Returns alphabet with the initial string appended to alpha</p>","abstract":false,"args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"args_string":"(alpha : Alphabet)","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L36","source_link":"https://github.com/Jens0512/crypt/blob/9c814c81255080cc63a3f3ebe333ca79766995d4/src/crypt/object_extensions.cr#L36","def":{"name":">>","args":[{"name":"alpha","doc":null,"default_value":"","external_name":"alpha","restriction":"Alphabet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alphabet(alpha.to_s + itself)"}}],"macros":[],"types":[]}]}}